{"version":3,"sources":["components/firebase/firebaseAuth.js","components/CodeInput.js","components/CodeList.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","CodeInput","props","handleSubmit","code","isValid","console","log","setState","validity","sendToDB","test","length","setColorStyle","state","error","collection","add","timestamp","Date","then","catch","className","style","backgroundColor","this","initialValues","onSubmit","obj","id","name","placeholder","type","React","Component","CodeList","componentDidMount","limit","orderBy","get","querySnapshot","docs","forEach","doc","arr","data","split","i","codeList","map","element","App","useState","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uTAaAA,IAASC,cAVY,CACnBC,OAAQ,0CACRC,WAAY,kCACZC,UAAW,kBACXC,cAAe,8BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAKFR,UAASS,YCwETC,EAjFA,kDACb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAMRC,aAAe,SAACC,GACTA,IAED,EAAKC,QAAQD,IACfE,QAAQC,IAAI,wBACZ,EAAKC,SAAS,CAAEC,SAAU,UAC1B,EAAKC,SAASN,KAEd,EAAKI,SAAS,CAAEC,SAAU,YAC1BH,QAAQC,IAAI,sCAhBG,EAoBnBF,QAAU,SAACD,GAET,MADc,aACDO,KAAKP,IAAyB,KAAhBA,EAAKQ,QAtBf,EAyBnBC,cAAgB,WACd,OAAK,EAAKC,MAAML,SACY,UAAxB,EAAKK,MAAML,UAAyB,EAAKK,MAAMC,MAC5C,QAD0D,QADhC,SA1BhB,EA+BnBL,SAAW,SAACN,GACVJ,EACGgB,WAAW,SACXC,IAAI,CACHb,KAAMA,EACNc,UAAW,IAAIC,OAEhBC,MAAK,WACJ,EAAKZ,SAAS,CAAEO,OAAO,OAExBM,OAAM,WACL,EAAKb,SAAS,CAAEO,OAAO,QAxC3B,EAAKD,MAAQ,CACXL,SAAU,GACVM,OAAO,GAJQ,EADN,qDA+CH,IAAD,OACP,OACE,sBACEO,UAAU,sBACVC,MAAO,CAAEC,gBAAiBC,KAAKZ,iBAFjC,UAIGY,KAAKX,MAAML,SACc,UAAxBgB,KAAKX,MAAML,UACY,IAArBgB,KAAKX,MAAMC,MACT,gDAEA,qEAGF,uFAGF,wDAEF,cAAC,IAAD,CACEW,cAAe,CAAEtB,KAAM,IACvBuB,SAAU,SAACC,GAAD,OAAS,EAAKzB,aAAayB,EAAIxB,OAF3C,SAIE,eAAC,IAAD,CAAMkB,UAAU,YAAhB,UACE,cAAC,IAAD,CAAOO,GAAG,OAAOC,KAAK,OAAOC,YAAY,SACzC,uBACA,wBAAQC,KAAK,SAAb,6BAzEG,GAAiBC,IAAMC,W,QCyCvBC,EA5CD,kDACZ,WAAYjC,GAAQ,IAAD,8BACjB,cAAMA,IAMRkC,kBAAoB,WAClBpC,EACGgB,WAAW,SACXqB,MAAM,IACNC,QAAQ,YAAa,QACrBC,MACAnB,MAAK,SAACoB,GACLA,EAAcC,KAAKC,SAAQ,SAACC,GAM1B,IAHA,IAEIC,EAFOD,EAAIE,OAAOzC,KAEP0C,QACNC,EAAI,EAAGA,EAAIH,EAAIhC,OAAQmC,GAAK,EACnCzC,QAAQC,IAAIqC,EAAIG,IAGlB,EAAKvC,SAAS,CACZwC,SAAS,GAAD,mBAAM,EAAKlC,MAAMkC,UAAjB,CAA2BL,EAAIE,kBAvB/C,EAAK/B,MAAQ,CACXkC,SAAU,IAHK,EADP,qDAiCV,OACE,sBAAK1B,UAAU,qBAAf,UACE,6CACCG,KAAKX,MAAMkC,SAASC,KAAI,SAACC,GACxB,OAAO,4BAA4BA,EAAQ9C,MAA5B8C,EAAQhC,qBArCnB,GAAiBe,IAAMC,WCgBtBiB,MAZf,WAAgB,IAAD,EACWC,oBAAS,GADpB,mBAGb,OAHa,UAIX,sBAAK9B,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,QCDS+B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBnC,MAAK,YAAkD,IAA/CoC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.5c9be9b2.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\n\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyBNxW81QdG-QG1cdgzwmLsV1qaB1B2tE7c\",\r\n  authDomain: \"pokemon-go-site.firebaseapp.com\",\r\n  projectId: \"pokemon-go-site\",\r\n  storageBucket: \"pokemon-go-site.appspot.com\",\r\n  messagingSenderId: \"200332795378\",\r\n  appId: \"1:200332795378:web:e28e96001caae4d38c9f6b\",\r\n  measurementId: \"G-WDV6TXMSG5\",\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebase.firestore();\r\n","import React from \"react\";\r\nimport { Formik, Form, Field } from \"formik\";\r\n\r\nimport \"../style.css\";\r\nimport firestore from \"./firebase/firebaseAuth\";\r\n\r\nconst CodeInput = class extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      validity: \"\",\r\n      error: false,\r\n    };\r\n  }\r\n  handleSubmit = (code) => {\r\n    if (!code) return;\r\n\r\n    if (this.isValid(code)) {\r\n      console.log(\"This is a valid code\");\r\n      this.setState({ validity: \"valid\" });\r\n      this.sendToDB(code);\r\n    } else {\r\n      this.setState({ validity: \"invalid\" });\r\n      console.log(\"Invalid, please check your code\");\r\n    }\r\n  };\r\n\r\n  isValid = (code) => {\r\n    const check = /(^[0-9]*$)/;\r\n    return check.test(code) && code.length === 12;\r\n  };\r\n\r\n  setColorStyle = () => {\r\n    if (!this.state.validity) return \"#0004\";\r\n    if (this.state.validity === \"valid\" && !this.state.error) return \"#4a0a\";\r\n    return \"#f34a\";\r\n  };\r\n\r\n  sendToDB = (code) => {\r\n    firestore\r\n      .collection(\"codes\")\r\n      .add({\r\n        code: code,\r\n        timestamp: new Date(),\r\n      })\r\n      .then(() => {\r\n        this.setState({ error: false });\r\n      })\r\n      .catch(() => {\r\n        this.setState({ error: true });\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className=\"container inputArea\"\r\n        style={{ backgroundColor: this.setColorStyle() }}\r\n      >\r\n        {this.state.validity ? (\r\n          this.state.validity === \"valid\" ? (\r\n            this.state.error === false ? (\r\n              <p>Code Submitted!</p>\r\n            ) : (\r\n              <p>There was an error, please try again</p>\r\n            )\r\n          ) : (\r\n            <p>Invalid Code, make sure you've entered 12 numbers only</p>\r\n          )\r\n        ) : (\r\n          <p>Enter your friend code!</p>\r\n        )}\r\n        <Formik\r\n          initialValues={{ code: \"\" }}\r\n          onSubmit={(obj) => this.handleSubmit(obj.code)}\r\n        >\r\n          <Form className=\"inputForm\">\r\n            <Field id=\"code\" name=\"code\" placeholder=\"Code\" />\r\n            <br />\r\n            <button type=\"submit\">Add</button>\r\n          </Form>\r\n        </Formik>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default CodeInput;\r\n","import React from \"react\";\r\nimport firestore from \"./firebase/firebaseAuth\";\r\n\r\nconst CodeList = class extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      codeList: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    firestore\r\n      .collection(\"codes\")\r\n      .limit(10)\r\n      .orderBy(\"timestamp\", \"desc\")\r\n      .get()\r\n      .then((querySnapshot) => {\r\n        querySnapshot.docs.forEach((doc) => {\r\n          //if (this.state.codeList.includes(doc.data().code)) return;\r\n\r\n          let code = doc.data().code;\r\n\r\n          let arr = code.split();\r\n          for (let i = 4; i < arr.length; i += 4) {\r\n            console.log(arr[i]);\r\n          }\r\n\r\n          this.setState({\r\n            codeList: [...this.state.codeList, doc.data()],\r\n          });\r\n        });\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container listArea\">\r\n        <p>Other codes:</p>\r\n        {this.state.codeList.map((element) => {\r\n          return <p key={element.timestamp}>{element.code}</p>;\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default CodeList;\r\n","import \"./App.css\";\n\nimport CodeInput from \"./components/CodeInput\";\nimport CodeList from \"./components/CodeList\";\n\nimport { useState } from \"react\";\n\nfunction App() {\n  const [Type, setType] = useState(false);\n\n  return (\n    <div className=\"App\">\n      <CodeInput />\n      <CodeList />\n      {/*Type ? <CodeInput /> : <CodeList />*/}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}