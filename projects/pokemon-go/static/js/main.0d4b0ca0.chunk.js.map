{"version":3,"sources":["components/firebase/firebaseAuth.js","components/CodeInput.js","components/CodeList.js","assets/logo.png","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","CodeInput","props","handleSubmit","code","state","validity","isValid","setState","sendToDB","test","length","setColorStyle","error","collection","add","timestamp","Date","then","catch","className","style","backgroundColor","this","initialValues","onSubmit","obj","id","name","placeholder","type","React","Component","CodeList","componentDidMount","limit","orderBy","get","querySnapshot","docs","forEach","doc","data","copied","codeList","codeClicked","element","navigator","clipboard","writeText","markAsCopied","index","findIndex","newCodeList","map","onClick","App","alt","src","logo","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0d4b0ca0.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\n\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyBNxW81QdG-QG1cdgzwmLsV1qaB1B2tE7c\",\r\n  authDomain: \"pokemon-go-site.firebaseapp.com\",\r\n  projectId: \"pokemon-go-site\",\r\n  storageBucket: \"pokemon-go-site.appspot.com\",\r\n  messagingSenderId: \"200332795378\",\r\n  appId: \"1:200332795378:web:e28e96001caae4d38c9f6b\",\r\n  measurementId: \"G-WDV6TXMSG5\",\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebase.firestore();\r\n","import React from \"react\";\r\nimport { Formik, Form, Field } from \"formik\";\r\n\r\nimport \"../style.css\";\r\nimport firestore from \"./firebase/firebaseAuth\";\r\n\r\nconst CodeInput = class extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      validity: \"\",\r\n      error: false,\r\n    };\r\n  }\r\n  handleSubmit = (code) => {\r\n    if (!code || this.state.validity === \"valid\") return;\r\n\r\n    if (this.isValid(code)) {\r\n      this.setState({ validity: \"valid\" });\r\n      this.sendToDB(code);\r\n    } else {\r\n      this.setState({ validity: \"invalid\" });\r\n    }\r\n  };\r\n\r\n  isValid = (code) => {\r\n    const check = /(^[0-9]*$)/;\r\n    return check.test(code) && code.length === 12;\r\n  };\r\n\r\n  setColorStyle = () => {\r\n    if (!this.state.validity) return \"#0004\";\r\n    if (this.state.validity === \"valid\" && !this.state.error) return \"#4a0a\";\r\n    return \"#f34a\";\r\n  };\r\n\r\n  sendToDB = (code) => {\r\n    firestore\r\n      .collection(\"codes\")\r\n      .add({\r\n        code: code,\r\n        timestamp: new Date(),\r\n      })\r\n      .then(() => {\r\n        this.setState({ error: false });\r\n      })\r\n      .catch(() => {\r\n        this.setState({ error: true });\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className=\"container inputArea\"\r\n        style={{ backgroundColor: this.setColorStyle() }}\r\n      >\r\n        {this.state.validity ? (\r\n          this.state.validity === \"valid\" ? (\r\n            this.state.error === false ? (\r\n              <p>Code Submitted! Refresh to update.</p>\r\n            ) : (\r\n              <p>There was an error, please try again</p>\r\n            )\r\n          ) : (\r\n            <p>Invalid Code, make sure you've entered 12 numbers</p>\r\n          )\r\n        ) : (\r\n          <p>Enter your friend code!</p>\r\n        )}\r\n        <Formik\r\n          initialValues={{ code: \"\" }}\r\n          onSubmit={(obj) => this.handleSubmit(obj.code)}\r\n        >\r\n          <Form className=\"inputForm\">\r\n            <Field id=\"code\" name=\"code\" placeholder=\"Code\" />\r\n            <button type=\"submit\">Add</button>\r\n          </Form>\r\n        </Formik>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default CodeInput;\r\n","import React from \"react\";\r\nimport firestore from \"./firebase/firebaseAuth\";\r\n\r\n// import update from \"immutability-helper\";\r\n\r\nconst CodeList = class extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      codeList: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    firestore\r\n      .collection(\"codes\")\r\n      .limit(10)\r\n      .orderBy(\"timestamp\", \"desc\")\r\n      .get()\r\n      .then((querySnapshot) => {\r\n        querySnapshot.docs.forEach((doc) => {\r\n          //if (this.state.codeList.includes(doc.data().code)) return;\r\n\r\n          let data = doc.data();\r\n\r\n          // For separating codes into groups of 4 (done in the app)\r\n          // let code = data.code;\r\n          // let arr = code.split();\r\n          // for (let i = 4; i < arr.length; i += 4) {\r\n          //   console.log(arr[i]);\r\n          // }\r\n\r\n          data.copied = \"\";\r\n\r\n          this.setState({\r\n            codeList: [...this.state.codeList, data],\r\n          });\r\n        });\r\n      });\r\n  };\r\n\r\n  codeClicked = (element) => {\r\n    navigator.clipboard\r\n      .writeText(element.code)\r\n      .then(() => this.markAsCopied(element.timestamp));\r\n  };\r\n\r\n  markAsCopied = (timestamp) => {\r\n    // console.log(\"Marking code:\", timestamp, \"as copied\");\r\n\r\n    let index = this.state.codeList.findIndex((element) => {\r\n      return element.timestamp === timestamp;\r\n    });\r\n\r\n    const newCodeList = this.state.codeList;\r\n    newCodeList[index].copied = \"copied\";\r\n\r\n    this.setState({ codeList: newCodeList });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container listArea\">\r\n        <p>Other codes:</p>\r\n        {this.state.codeList.length === 0 ? (\r\n          <p>Loading, please wait...</p>\r\n        ) : (\r\n          this.state.codeList.map((element) => {\r\n            return (\r\n              <p\r\n                className={\"code \" + element.copied}\r\n                onClick={() => this.codeClicked(element)}\r\n                key={element.timestamp}\r\n              >\r\n                {element.code}\r\n              </p>\r\n            );\r\n          })\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default CodeList;\r\n","export default __webpack_public_path__ + \"static/media/logo.0fcdb522.png\";","import \"./style.css\";\nimport CodeInput from \"./components/CodeInput\";\nimport CodeList from \"./components/CodeList\";\n\nimport logo from \"./assets/logo.png\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"heading\">\n        <img alt=\"Pokemon GO logo\" src={logo} className=\"logo\" />\n        <h1 className=\"description\">Make Some Friends</h1>\n      </div>\n      <CodeInput />\n      <CodeList />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}